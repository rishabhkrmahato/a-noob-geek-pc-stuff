# Script to download, unzip GitHub repo, and provide an interface to run tools

# ASCII Art Header
$asciiHeader = @"
__________ ____  __.  _____      __                .__          
\______   \    |/ _| /     \   _/  |_  ____   ____ |  |   ______
 |       _/      <  /  \ /  \  \   __\/  _ \ /  _ \|  |  /  ___/
 |    |   \    |  \/    Y    \  |  | (  <_> |  <_> )  |__\___ \ 
 |____|_  /____|__ \____|__  /  |__|  \____/ \____/|____/____  >
        \/        \/       \/                                \/ 
"@

Write-Host $asciiHeader -ForegroundColor Cyan

# Brief intro about the repo
Write-Host "`nThis repository hosts a variety of scripts and small programs that help automate and simplify daily tasks on a Windows PC." -ForegroundColor Green
Write-Host "Built for convenience, each tool focuses on making small improvements to the system experience." -ForegroundColor Green

# Ask the user to run the script as an administrator
Write-Host "`n** WARNING: Please run this tool as Admin !, as many scripts require admin usage. **" -ForegroundColor Red

# Define the GitHub repo URL
$repoURL = "https://github.com/rishabhkrmahato/a-noob-geek-pc-stuff/archive/refs/heads/main.zip"
$downloadPath = "$env:USERPROFILE\Desktop\a-noob-geek-pc-stuff.zip"
$extractPath = "$env:USERPROFILE\Desktop\a-noob-geek-pc-stuff"

# Function to download and unzip the repository
Function Download-Repo {
    Write-Host "`nDownloading GitHub repository..." -ForegroundColor Yellow
    Invoke-WebRequest -Uri $repoURL -OutFile $downloadPath

    Write-Host "Extracting the repository..." -ForegroundColor Yellow
    Expand-Archive -Path $downloadPath -DestinationPath $extractPath
    Write-Host "Repository extracted to Desktop." -ForegroundColor Green
}

# Function to execute the chosen tool
Function Run-Tool($toolPath) {
    Write-Host "Running $toolPath..." -ForegroundColor Yellow
    Start-Process $toolPath
}

# Main Menu
Function Show-Menu {
    Write-Host "`nSelect a tool to run:" -ForegroundColor Cyan
    Write-Host "[1] "list-all-files-full-paths.bat"
    Write-Host "[2] "git-commit-changes.bat" 

    $selection = Read-Host "Enter your choice [1-]"

    Switch ($selection) {
        "1" { Run-Tool "$extractPath\.bat\list-all-files-full-paths.bat" }
        "2" { Run-Tool "$extractPath\.bat\git-commit-changes.bat" }
        
        "" { Write-Host "Exiting..." -ForegroundColor Red; exit }
        Default { Write-Host "Invalid choice, please try again." -ForegroundColor Red }
    }
}

# Check if repo exists on Desktop; if not, download and extract
If (-Not (Test-Path -Path $extractPath)) {
    Download-Repo
}

# Show menu to user
Show-Menu
